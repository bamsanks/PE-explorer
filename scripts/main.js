var exeData = [
  0x4D,0x5A,0x40,0x00,0x01,0x00,0x00,0x00,0x01,0x00,0xFF,0x0F,0xFF,0xFF,0x01,0x00,
  0xFF,0xFF,0x00,0x00,0x08,0x00,0x00,0x00,0x16,0x1F,0xB4,0x09,0xBA,0x06,0x00,0xCD,
  0x21,0xB8,0x01,0x4C,0xCD,0x21,0x4E,0x6F,0x74,0x20,0x61,0x20,0x44,0x4F,0x53,0x20,
  0x70,0x72,0x6F,0x67,0x72,0x61,0x6D,0x2E,0x0D,0x0A,0x24,0x00,0x40,0x00,0x00,0x00,
  0x50,0x45,0x00,0x00,0x4C,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0xC8,0x00,0x0F,0x03,0x0B,0x01,0x06,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xCA,0x10,0x00,0x00,0x00,0x10,0x00,0x00,
  0x00,0x10,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x10,0x00,0x00,0x00,0x02,0x00,0x00,
  0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x00,0x0A,0x00,0x00,0x00,0x00,0x00,
  0x2A,0x11,0x00,0x00,0xF6,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,
  0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,
  0x00,0x00,0x00,0x00,0x0D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x02,0x11,0x00,0x00,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xDA,0x10,0x00,0x00,0x2C,0x00,0x00,0x00,
  0x2E,0x74,0x65,0x78,0x74,0x00,0x00,0x00,0x2A,0x01,0x00,0x00,0x00,0x10,0x00,0x00,
  0x2A,0x01,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x60,0x00,0x00,0xE0,0x6B,0x65,0x72,0x6E,0x65,0x6C,0x33,0x32,
  0x2E,0x64,0x6C,0x6C,0x00,0x75,0x73,0x65,0x72,0x33,0x32,0x2E,0x64,0x6C,0x6C,0x00,
  0x38,0x03,0x47,0x6C,0x6F,0x62,0x61,0x6C,0x4C,0x6F,0x63,0x6B,0x00,0x00,0x3F,0x03,
  0x47,0x6C,0x6F,0x62,0x61,0x6C,0x55,0x6E,0x6C,0x6F,0x63,0x6B,0x00,0x00,0x00,0x00,
  0x45,0x78,0x69,0x74,0x50,0x72,0x6F,0x63,0x65,0x73,0x73,0x00,0x97,0x02,0x4F,0x70,
  0x65,0x6E,0x43,0x6C,0x69,0x70,0x62,0x6F,0x61,0x72,0x64,0x00,0x4F,0x00,0x43,0x6C,
  0x6F,0x73,0x65,0x43,0x6C,0x69,0x70,0x62,0x6F,0x61,0x72,0x64,0x00,0x00,0x34,0x01,
  0x47,0x65,0x74,0x43,0x6C,0x69,0x70,0x62,0x6F,0x61,0x72,0x64,0x44,0x61,0x74,0x61,
  0x00,0x00,0x1B,0x03,0x53,0x65,0x74,0x43,0x6C,0x69,0x70,0x62,0x6F,0x61,0x72,0x64,
  0x44,0x61,0x74,0x61,0x00,0x00,0xE8,0x00,0x45,0x6D,0x70,0x74,0x79,0x43,0x6C,0x69,
  0x70,0x62,0x6F,0x61,0x72,0x64,0x00,0x00,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,
  0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,0x48,

  0x55,0x89,0xE5,0x83,0xEC,0x10,0xC7,0x45,0xF4,0x00,0x04,0x00,0x00,0xC6,0x45,0xF3, // <-- Some function
  0x2F,0xC6,0x45,0xF2,0x5C,0x8B,0x45,0x08,0x89,0x45,0xFC,0xC7,0x45,0xF8,0x00,0x00,
  0x00,0x00,0x8B,0x45,0xF8,0x3B,0x45,0xF4,0x7D,0x37,0x8B,0x45,0xFC,0x0F,0xB6,0x00,
  0x84,0xC0,0x74,0x2C,0x8B,0x45,0xFC,0x0F,0xB6,0x00,0x3C,0x2F,0x75,0x08,0x8B,0x45,
  0xFC,0xC6,0x00,0x5C,0xEB,0x10,0x8B,0x45,0xFC,0x0F,0xB6,0x00,0x3C,0x5C,0x75,0x06,
  0x8B,0x45,0xFC,0xC6,0x00,0x2F,0x83,0x45,0xFC,0x01,0x83,0x45,0xF8,0x01,0xEB,0xC2,
  0x90,0xC9,0xC3,0x55,0x89,0xE5,0x83,0xEC,0x10,0x6A,0x00,0xFF,0x15,0xEA,0x10,0x40, // <-- Replace slashes
  0x00,0x85,0xC0,0x0F,0x94,0xC0,0x84,0xC0,0x75,0x4D,0x6A,0x01,0xFF,0x15,0xF2,0x10,
  0x40,0x00,0x89,0x45,0xFC,0x83,0x7D,0xFC,0x00,0x74,0x34,0xFF,0x75,0xFC,0xFF,0x15,
  0xDA,0x10,0x40,0x00,0x89,0x45,0xF8,0x83,0x7D,0xF8,0x00,0x74,0x22,0xFF,0x75,0xF8,
  0xE8,0x5B,0xFF,0xFF,0xFF,0xFF,0x75,0xFC,0xFF,0x15,0xDE,0x10,0x40,0x00,0xFF,0x15,
  0xFA,0x10,0x40,0x00,0xFF,0x75,0xFC,0x6A,0x01,0xFF,0x15,0xF6,0x10,0x40,0x00,0xFF,
  0x15,0xEE,0x10,0x40,0x00,0xEB,0x01,0x90,0xC9,0xC3,0x55,0x89,0xE5,0xE8,0x91,0xFF,  // <-- Entry point!
  0xFF,0xFF,0x6A,0x00,0xFF,0x15,0xE2,0x10,0x40,0x00,0x60,0x01,0x00,0x00,0x6E,0x01,
  0x00,0x00,0x7E,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x8C,0x01,0x00,0x00,0x9C,0x01,
  0x00,0x00,0xAE,0x01,0x00,0x00,0xC2,0x01,0x00,0x00,0xD6,0x01,0x00,0x00,0x00,0x00,
  0x00,0x00,0xDA,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x48,0x01,
  0x00,0x00,0xDA,0x10,0x00,0x00,0xEA,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x55,0x01,0x00,0x00,0xEA,0x10,0x00,0x00];

function OpenExe(data) {
  const file = new ExeFile(data);

  const machine = new Machine(file._reader);
  machine.LoadExe(file);
  // machine.Execute();

  return file;
} 

function CleanNTString(str) {
  return str.split("\0")[0];
}

function CreateTable(tableData) {
  var ncol = tableData[0]?.length;
  var table = document.createElement("table");
  for (let row of tableData) {
    if (row.length != ncol) throw("Cannot create table with inconsistent column lengths!");
    let tr = document.createElement("tr");
    for (let col of row) {
      let td = document.createElement("td");
      td.innerText = col;
      tr.appendChild(td);
    }
    table.appendChild(tr);
  }
  return table;
}

function showSection(name) {
  var dest = document.getElementById("content");
  switch(name) {
    case "MZ Header":
      var keys = Object.keys(globals.exeFile.MZHeader);
      var tableData = [];
      for (let key of keys) {
        tableData.push([key, globals.exeFile.MZHeader[key]?.Value]);
      }
      dest.innerHTML = "";
      dest.appendChild(CreateTable(tableData));
      break;
    case "PE Header":
      var keys = Object.keys(globals.exeFile.PEHeader);
      var tableData = [];
      for (let key of keys) {
        tableData.push([key, globals.exeFile.PEHeader[key]?.Value]);
      }
      dest.innerHTML = "";
      dest.appendChild(CreateTable(tableData));
      break;
    case "PE Optional Header":
      var keys = Object.keys(globals.exeFile.PEOptionalHeader);
      var tableData = [];
      for (let key of keys) {
        tableData.push([key, globals.exeFile.PEOptionalHeader[key]]);
      }
      dest.innerHTML = "";
      dest.appendChild(CreateTable(tableData));
      break;
    case "Imports":
      dest.innerHTML = "";
      for (let importFile of globals.exeFile.Imports) {
        dest.innerHTML += "<b>" + importFile.DllName + ":</b><br/>";
        for (let imp of importFile.Imports) {
          dest.innerHTML += imp.ImportName + "<br>";
        }
        dest.innerHTML += "<hr>";
      }
      break;
    case "Exports":
      dest.innerHTML = "";
      for (let exp of globals.exeFile.Exports?.Exports ?? []) {
        dest.innerHTML += exp.Name + "<br>";
      }
      break;
    default:
      var section = globals.exeFile.SectionHeaders
        .filter(x => CleanNTString(x.Name) == name)[0];
        var keys = Object.keys(section);
        var tableData = [];
        for (let key of keys) {
          value = section[key];
          if (key == "Name") value = CleanNTString(value);
          tableData.push([key, value]);
        }
        dest.innerHTML = "";
        dest.appendChild(CreateTable(tableData));
        break;
  }
}

function SummariseFile() {
  var cont = document.getElementById("section_summaries");
  var sectionNames = ["MZ Header", "PE Header", "PE Optional Header", "Imports", "Exports"];

  for (let sectionHeader of globals.exeFile.SectionHeaders) {
    sectionNames.push(CleanNTString(sectionHeader.Name));
  }

  cont.innerHTML = "";
  for (let sectionName of sectionNames) {
    var section = document.createElement("div");
    section.classList.add("section-summary");
    section.innerText = sectionName;
    section.onclick = () => showSection(sectionName);
    cont.appendChild(section);
  }

  // var sects = document.getElementsByClassName("section");
  // var dest = sects[0].getElementsByClassName("content")[0];
  // // MZHEADER
  // var keys;
  // keys = Object.keys(file.MZHeader);
  // for (let key of keys) {
  //   dest.innerHTML += key + ": " + file.MZHeader[key]?.Value + "<br/>";
  // }

  // // PEHEADER
  // keys = Object.keys(file.PEHeader);
  // dest = sects[1].getElementsByClassName("content")[0];
  // for (let key of keys) {
  //   dest.innerHTML += key + ": " + file.PEHeader[key].Value + "<br/>";
  // }

  // // PEOPTIONALHEADER
  // keys = Object.keys(file.PEOptionalHeader);
  // dest = sects[2].getElementsByClassName("content")[0];
  // for (let key of keys) {
  //   dest.innerHTML += key + ": " + file.PEOptionalHeader[key] + "<br/>";
  // }
}

var globals = { exeFile: null };

window.onload = function() {
  globals.exeFile = OpenExe(exeData);
  SummariseFile();
}